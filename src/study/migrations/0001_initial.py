# Generated by Django 3.1.7 on 2021-04-02 00:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Study',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=5000, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Seq',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seqfile', models.FileField(blank=True, null=True, upload_to='seqs/')),
                ('avg_length', models.IntegerField()),
                ('bases', models.IntegerField()),
                ('count', models.IntegerField()),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('study', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='runs', to='study.study')),
            ],
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('taxon_id', models.CharField(max_length=100)),
                ('scientific_name', models.CharField(max_length=100)),
                ('common_name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('study', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='study.study')),
            ],
        ),
        migrations.CreateModel(
            name='Run',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('date_run', models.DateTimeField(blank=True, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('library_name', models.CharField(max_length=100)),
                ('platform', models.CharField(choices=[('_LS454', '_LS454'), ('ABI_SOLID', 'ABI_SOLID'), ('BGISEQ', 'BGISEQ'), ('CAPILLARY', 'CAPILLARY'), ('COMPLETE_GENOMICS', 'COMPLETE_GENOMICS'), ('HELICOS', 'HELICOS'), ('ILLUMINA', 'ILLUMINA'), ('ION_TORRENT', 'ION_TORRENT'), ('OXFORD_NANOPORE', 'OXFORD_NANOPORE'), ('PACBIO_SMRT', 'PACBIO_SMRT')], max_length=100)),
                ('instrument_model', models.CharField(max_length=100)),
                ('library_strategy', models.CharField(choices=[('WGA', 'Random sequencing of the whole genome following non-pcr amplification'), ('WGS', 'Random sequencing of the whole genome'), ('WXS', 'Random sequencing of exonic regions selected from the genome'), ('RNA-Seq', 'Random sequencing of whole transcriptome'), ('miRNA-Seq', 'Random sequencing of small miRNAs'), ('WCS', 'Random sequencing of a whole chromosome or other replicon isolated from a genome'), ('CLONE', 'Genomic clone based (hierarchical) sequencing'), ('POOLCLONE', 'Shotgun of pooled clones (usually BACs and Fosmids)'), ('AMPLICON', 'Sequencing of overlapping or distinct PCR or RT-PCR products'), ('CLONEEND', "Clone end (5', 3', or both) sequencing"), ('FINISHING', 'Sequencing intended to finish (close) gaps in existing coverage'), ('ChIP-Seq', 'Direct sequencing of chromatin immunoprecipitates'), ('MNase-Seq', 'Direct sequencing following MNase digestion'), ('DNase-Hypersensitivity', 'Sequencing of hypersensitive sites, or segments of open chromatin that are more readily cleaved by DNaseI'), ('Bisulfite-Seq', 'Sequencing following treatment of DNA with bisulfite to convert cytosine residues to uracil depending on methylation status'), ('Tn-Seq', 'Sequencing from transposon insertion sites'), ('EST', 'Single pass sequencing of cDNA templates'), ('FL-cDNA', 'Full-length sequencing of cDNA templates'), ('CTS', 'Concatenated Tag Sequencing'), ('MRE-Seq', 'Methylation-Sensitive Restriction Enzyme Sequencing strategy'), ('MeDIP-Seq', 'Methylated DNA Immunoprecipitation Sequencing strategy'), ('MBD-Seq', 'Direct sequencing of methylated fractions sequencing strategy'), ('Synthetic-Long-Read', 'Synthetic-Long-Read'), ('ATAC-seq', 'Assay for Transposase-Accessible Chromatin (ATAC) strategy is used to study genome-wide chromatin accessibility. alternative method to DNase-seq that uses an engineered Tn5 transposase to cleave DNA and to integrate primer DNA sequences into the cleaved genomic DNA'), ('ChIA-PET', 'Direct sequencing of proximity-ligated chromatin immunoprecipitates.'), ('FAIRE-seq', 'Formaldehyde Assisted Isolation of Regulatory Elements. reveals regions of open chromatin'), ('Hi-C', 'Chromosome Conformation Capture technique where a biotin-labeled nucleotide is incorporated at the ligation junction, enabling selective purification of chimeric DNA ligation junctions followed by deep sequencing'), ('ncRNA-Seq', 'Capture of other non-coding RNA types, including post-translation modification types such as snRNA (small nuclear RNA) or snoRNA (small nucleolar RNA), or expression regulation types such as siRNA (small interfering RNA) or piRNA/piwi/RNA (piwi-interacting RNA).'), ('RAD-Seq', 'RAD-Seq'), ('RIP-Seq', 'Direct sequencing of RNA immunoprecipitates, includes CLIP-Seq, HITS-CLIP and PAR-CLIP'), ('SELEX', 'Systematic Evolution of Ligands by EXponential enrichment'), ('ssRNA-seq', 'strand-specific RNA sequencing'), ('Targeted-Capture', 'Targeted-Capture'), ('Tethered Chromatin Conformation Capture', 'Tethered Chromatin Conformation Capture'), ('OTHER', 'Library strategy not listed, please include additional info in the description section)')], max_length=100)),
                ('library_source', models.CharField(choices=[('GENOMIC', 'Genomic DNA (includes PCR products from genomic DNA)'), ('TRANSCRIPTOMIC', 'Transcription products or non genomic DNA (EST, cDNA, RT-PCR, screened libraries)'), ('METAGENOMIC', 'Mixed material from metagenome'), ('METATRANSCRIPTOMIC', 'Transcription products from community targets'), ('SYNTHETIC', 'Synthetic DNA'), ('VIRAL RNA', 'Viral RNA'), ('GENOMIC SINGLE CELL', ''), ('TRANSCRIPTOMIC SINGLE CELL', ''), ('OTHER', 'Other, unspecified, or unknown library source material(please include additional info in the description section')], max_length=100)),
                ('library_layout', models.CharField(choices=[('PAIRED', 'PAIRED'), ('SINGLE', 'SINGLE')], max_length=100)),
                ('library_selection', models.CharField(choices=[('RANDOM', 'Random selection by shearing or other method'), ('PCR', 'Source material was selected by designed primers'), ('RANDOM PCR', 'Source material was selected by randomly generated primers'), ('RT-PCR', 'Source material was selected by reverse transcription PCR'), ('HMPR', 'Hypo-methylated partial restriction digest'), ('MF', 'Methyl Filtrated'), ('CF-S', 'Cot-filtered single/low-copy genomic DNA'), ('CF-M', 'Cot-filtered moderately repetitive genomic DNA'), ('CF-H', 'Cot-filtered highly repetitive genomic DNA'), ('CF-T', 'Cot-filtered theoretical single-copy genomic DNA'), ('MDA', 'Multiple displacement amplification'), ('MSLL', 'Methylation Spanning Linking Library'), ('cDNA', 'complementary DNA'), ('ChIP', 'Chromatin immunoprecipitation'), ('MNase', 'Micrococcal Nuclease (MNase) digestion'), ('DNAse', 'Deoxyribonuclease (MNase) digestion'), ('Hybrid Selection', 'Selection by hybridization in array or solution'), ('Reduced Representation', 'Reproducible genomic subsets, often generated by restriction fragment size selection, containing a manageable number of loci to facilitate re-sampling'), ('Restriction Digest', 'DNA fractionation using restriction enzymes'), ('5-methylcytidine antibody', 'Selection of methylated DNA fragments using an antibody raised against 5-methylcytosine or 5-methylcytidine (m5C)'), ('MBD2 protein methyl-CpG binding domain', 'Enrichment by methyl-CpG binding domain'), ('CAGE', 'Cap-analysis gene expression'), ('RACE', 'Rapid Amplification of cDNA Ends'), ('size fractionation', 'Physical selection of size appropriate targets'), ('Padlock probes capture method', 'Circularized oligonucleotide probes'), ('other', 'Other library enrichment, screening, or selection process (please include additional info in the description section'), ('unspecified', 'Library enrichment, screening, or selection is not specified, please include additional info in the description field'), ('cDNA_oligo_dT', 'cDNA_oligo_dT'), ('cDNA_randomPriming', 'cDNA_oligo_dT'), ('Inverse rRNA', 'depletion of ribosomal RNA by oligo hybridization.'), ('Oligo-dT', 'enrichment of messenger RNA (mRNA) by hybridization to Oligo-dT.'), ('PolyA', 'PolyA selection or enrichment for messenger RNA (mRNA); should replace cDNA enumeration.'), ('repeat fractionation', 'Selection for less repetitive (and more gene rich) sequence through Cot filtration or other fractionation techniques based on DNA kinetics.')], max_length=100)),
                ('description', models.CharField(max_length=100)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('sample', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='experiments', to='study.sample')),
            ],
        ),
    ]
